user  nginx;
worker_processes  auto;
load_module modules/ngx_http_image_filter_module.so;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;

    keepalive_timeout  65;

    #gzip  on;

    map $arg_width $width {
        default     '-';
        "~[0-9]+"    $arg_width;
    }
    map $arg_height $height {
        default     '-';
        "~[0-9]+"    $arg_height;
    }

    map $http_accept $webp_suffix {
        default   "";
        "~*webp"  ".webp";
    }

    upstream minio_servers {
        server minio:9000 max_fails=0;

        keepalive 128;
    }


    server {
        listen       80;
        server_name  _;

        add_header 'X-DEBUG' $http_accept always;

        location ~* \.(?:jpg|jpeg|png|webp)$ {
            root   /usr/share/nginx/html;
            try_files $uri$webp_suffix $uri =404;

            image_filter_jpeg_quality 95;
            image_filter_webp_quality 100;
            image_filter_interlace on;
            image_filter_buffer 100M;
            image_filter resize $width $height;
            image_filter crop $width $height;
            image_filter_transparency on;
        }

        location / {
                return 200 'OK';
                add_header Content-Type text/plain;
        }
    }

    server {
        listen       81;
        server_name  _;

        add_header 'X-DEBUG' $http_accept always;

        recursive_error_pages on;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header Range $http_range;
        proxy_set_header If-Range $http_if_range;
        proxy_intercept_errors on;

        proxy_hide_header     x-amz-id-2;
        proxy_hide_header     x-amz-meta-etag;
        proxy_hide_header     x-amz-request-id;
        proxy_hide_header     x-amz-meta-server-side-encryption;
        proxy_hide_header     x-amz-server-side-encryption;
        proxy_hide_header     Set-Cookie;
        proxy_ignore_headers  Set-Cookie;

        proxy_connect_timeout 300;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        chunked_transfer_encoding off;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504 http_404;

        location ~* \.(?:jpg|jpeg|png|webp)$ {
            root   /usr/share/nginx/html;
            try_files /dev/null @image_webp;
        }

        location @image_webp {
            proxy_pass http://minio_servers$uri$webp_suffix;

            image_filter_jpeg_quality 95;
            image_filter_webp_quality 100;
            image_filter_interlace on;
            image_filter_buffer 100M;
            image_filter resize $width $height;
            image_filter crop $width $height;
            image_filter_transparency on;

            error_page 404 415 = @image;
        }

        location @image {
            proxy_pass http://minio_servers$uri;

            image_filter_jpeg_quality 95;
            image_filter_webp_quality 100;
            image_filter_interlace on;
            image_filter_buffer 100M;
            image_filter resize $width $height;
            image_filter crop $width $height;
            image_filter_transparency on;
        }

        location / {
                return 200 'OK';
                add_header Content-Type text/plain;
        }
    }
}
